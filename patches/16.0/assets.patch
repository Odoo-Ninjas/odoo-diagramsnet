From bfb89f0b75bc94b26901a90a467468c1646389b8 Mon Sep 17 00:00:00 2001
From: Marc Wimmer <marc@itewimmer.de>
Date: Thu, 25 May 2023 17:14:32 +0200
Subject: [PATCH] for patch

---
 __manifest__.py           |   6 ++-
 static/js/diagrams_net.js | 111 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 115 insertions(+), 2 deletions(-)
 create mode 100644 addons/diagrams_net/static/js/diagrams_net.js

diff --git a/__manifest__.py b/__manifest__.py
index d40ff56e..e5bb2008 100644
--- a/__manifest__.py
+++ b/__manifest__.py
@@ -1,12 +1,14 @@
 {   'application': False,
+    'assets': {   'web.assets_backend': [   'diagrams_net/static/css/diagrams_net.scss',
+                                            'diagrams_net/static/src/js/diagrams_net.js'],
+                  'web.assets_qweb': [   'diagrams_net/static/xml/diagrams_net.xml']},
     'author': 'Marc Wimmer (marc@itewimmer.de)',
     'css': ['static/css/diagrams_net.scss'],
-    'data': ['views/assets.xml'],
+    'data': [],
     'demo': [],
     'depends': ['web'],
     'external_dependencies': {'bin': [], 'python': []},
     'name': 'diagrams_net',
-    'qweb': ['static/xml/diagrams_net.xml'],
     'test': [],
     'version': '13.0.1.0',
     'web': True}
diff --git a/static/js/diagrams_net.js b/static/js/diagrams_net.js
new file mode 100644
index 00000000..e5182e57
--- /dev/null
+++ b/static/js/diagrams_net.js
@@ -0,0 +1,111 @@
+/** @odoo-module **/
+
+import { registry } from "@web/core/registry";
+import { BooleanField } from "@web/views/fields/boolean/boolean_field";
+import { Component, xml } from "@odoo/owl";
+
+//override existing
+class SourceCodeViewer extends= AbstractField {
+
+
+    template: 'diagrams_net_widget',
+    init() {
+        this._super.apply(this, arguments);
+    }
+    destroy() {
+        this._super.apply(this, arguments);
+    },
+    start() {
+        res = this._super.apply(this, arguments);
+        var self = this;
+    },
+    destroy() {
+        this._super.apply(this, arguments);
+        if (this.handler) {
+            document.body.removeEventListener(
+                'message', this.message_received);
+        };
+
+    },
+    _render() {
+
+        var self = this;
+
+        self._super.apply(this, arguments);
+        window.addEventListener(
+            'message', self.message_received.bind(self), false);
+
+        if (!self.iframe1) {
+            self.iframe1 = self._makeiframe();
+        }
+        if (!self.iframe2) {
+            self.iframe2 = self._makeiframe();
+        }
+        self.img = self.$el.find("#img1");
+        self.xml_content = "";
+
+        self.iframe1.prop('src', self.iframe_url());
+
+    }
+    _makeiframe() {
+        var $res = $("<iframe/>").appendTo($("body"));
+        $res.hide();
+        return $res;
+    }
+    iframe_url() {
+        return "https://embed.diagrams.net/?proto=json&client=0&ready=message&embed=1";
+    }
+    message_received(evt) {
+        console.log(evt.data);
+        var self = this;
+
+        if (!evt.data) {
+            return;
+        }
+        var data = JSON.parse(evt.data);
+        if (data.event == 'init') {
+            if (!self.xml_content) {
+                self.iframe1[0].contentWindow.postMessage(JSON.stringify({
+                    action: "load",
+                    descriptor: {
+                        format: "csv",
+                        data: self.value,
+                    }
+                }), '*');
+            }
+            else {
+                if (self.iframe2 && self.iframe2[0].contentWindow) {
+                    self.iframe2[0].contentWindow.postMessage(JSON.stringify({
+                        action: "load",
+                        descriptor: {
+                            format: "xml",
+                            data: this.xml_content,
+                        }
+                    }), '*');
+                }
+            }
+        }
+        else if (data.event == 'load') {
+            if (!this.xml_content) {
+                this.xml_content = data.xml;
+                this.iframe1.css("height", "1800px");
+                this.iframe1.remove();
+                this.iframe2.prop("src", this.iframe_url());
+            }
+            else {
+                if (this.iframe2 && this.iframe2[0].contentWindow) {
+                    this.iframe2[0].contentWindow.postMessage(JSON.stringify({
+                        action: "export",
+                        format: "url",
+                    }), '*');
+                }
+            }
+        }
+        else if (data.event == 'export') {
+            this.iframe2.remove()
+            this.img.prop("src", data.data);
+        }
+    }
+}
+
+registry.category("fields").add("diagrams_net", SourceCodeViewer);
\ No newline at end of file
-- 
2.34.1